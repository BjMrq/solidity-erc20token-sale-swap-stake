/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from "./types";

export interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export type Request = ContractEventLog<{
  _beneficiary: string;
  _balance: string;
  0: string;
  1: string;
}>;

export interface Faucet extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): Faucet;
  clone(): Faucet;
  methods: {
    lockTime(arg0: string): NonPayableTransactionObject<string>;

    makeItRain(): PayableTransactionObject<void>;
  };
  events: {
    Request(cb?: Callback<Request>): EventEmitter;
    Request(options?: EventOptions, cb?: Callback<Request>): EventEmitter;

    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };

  once(event: "Request", cb: Callback<Request>): void;
  once(event: "Request", options: EventOptions, cb: Callback<Request>): void;
}
