/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from "./types";

export interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export type Rate = ContractEventLog<{
  scaledPrice: string;
  timeStamp: string;
  0: string;
  1: string;
}>;

export interface Ratable extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): Ratable;
  clone(): Ratable;
  methods: {
    getScaledRate(
      _scalingDecimal: number | string | BN
    ): NonPayableTransactionObject<string>;
  };
  events: {
    Rate(cb?: Callback<Rate>): EventEmitter;
    Rate(options?: EventOptions, cb?: Callback<Rate>): EventEmitter;

    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };

  once(event: "Rate", cb: Callback<Rate>): void;
  once(event: "Rate", options: EventOptions, cb: Callback<Rate>): void;
}
